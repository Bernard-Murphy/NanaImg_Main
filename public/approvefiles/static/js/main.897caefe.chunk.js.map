{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","approve","e","id","target","split","role","document","querySelector","textContent","fd","FormData","append","axios","post","then","res","window","location","href","catch","err","console","log","deny","state","regs","roleOptions","value","label","addEventListener","inputCheck","querySelectorAll","length","i","input","readOnly","get","setState","data","response","className","this","map","reg","user_id","username","email","status_action_date","options","defaultValue","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"oTAoGeA,E,kDA9Fb,aAAc,IAAD,8BACX,gBAqCFC,QAAU,SAACC,GACT,IAAIC,EAAKD,EAAEE,OAAOD,GAAGE,MAAM,KAAK,GAC5BC,EAAOC,SAASC,cAAT,eAA+BL,EAA/B,iBAAiDM,YACxDC,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQN,GAClBO,IAAMC,KAAN,+CAAmDX,GAAMO,GACtDK,MAAK,SAAAC,GACJC,OAAOC,SAASC,KAAO,oCAExBC,OAAM,SAAAC,GACLC,QAAQC,IAAI,yBAhDL,EAoDbC,KAAO,SAACtB,GACN,IAAIC,EAAKD,EAAEE,OAAOD,GAAGE,MAAM,KAAK,GAEhCQ,IAAMC,KAAN,4CAAgDX,IAC7CY,MAAK,SAAAC,GACJC,OAAOC,SAASC,KAAO,oCAExBC,OAAM,SAAAC,GACLC,QAAQC,IAAI,yBA1DhB,EAAKE,MAAQ,CACXC,KAAM,IAER,EAAKC,YAAc,CACjB,CAACC,MAAO,UAAWC,MAAO,WAC1B,CAACD,MAAO,QAASC,MAAO,SACxB,CAACD,MAAO,WAAYC,MAAO,YAC3B,CAACD,MAAO,SAAUC,MAAO,WAThB,E,gEAaO,IAAD,OACJtB,SAASC,cAAc,QAC/BsB,iBAAiB,SAAS,WAC3B,IAAIC,EAAaxB,SAASyB,iBAAiB,SAC3C,GAAID,EAAWE,OACX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWE,OAAS,EAAGC,IAAI,CAC3C,IAAIC,EAAQ5B,SAASC,cAAT,wBAAwC0B,EAAxC,WACE,OAAVC,IACAA,EAAMC,UAAW,OAKjCvB,IAAMwB,IAAI,2CACPtB,MAAK,SAAAC,GACJ,EAAKsB,SAAL,2BACK,EAAKb,OADV,IAEEC,KAAK,YAAKV,EAAIuB,KAAKC,gBAGtBpB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BA8BT,IAAD,OACN,OACE,qCACA,oBAAIlB,GAAG,iBAAP,wBACA,sBAAKA,GAAG,4BAAR,UACI,oBAAIsC,UAAU,oCAAd,sBACA,oBAAIA,UAAU,qCAAd,mBACA,oBAAIA,UAAU,oCAAd,8BACA,oBAAIA,UAAU,oCAAd,sBACA,oBAAIA,UAAU,mCAAd,wBAEHC,KAAKjB,MAAMC,KAAKiB,KAAI,SAACC,GACpB,OACE,sBAAuBH,UAAU,oBAAoBtC,GAAE,aAAQyC,EAAIC,SAAnE,UACI,oBAAI1C,GAAE,kBAAayC,EAAIC,SAAWJ,UAAU,6BAA5C,SAA0EG,EAAIE,WAC9E,oBAAIL,UAAU,8BAAd,SAA6CG,EAAIG,QACjD,oBAAIN,UAAU,6BAAd,SAA4CG,EAAII,qBAChD,cAAC,IAAD,CAAQ7C,GAAE,cAASyC,EAAIC,SAAWJ,UAAU,6BAA6BQ,QAAS,EAAKtB,YAAauB,aAAc,CAAErB,MAAO,WAAYD,MAAO,cAC9I,sBAAKa,UAAU,WAAf,UACE,wBAAQtC,GAAE,kBAAayC,EAAIC,SAAWJ,UAAU,qBAAqBU,QAAS,EAAKlD,QAAnF,qBACA,wBAAQE,GAAE,eAAUyC,EAAIC,SAAWJ,UAAU,qBAAqBU,QAAS,EAAK3B,KAAhF,uBAPIoB,EAAIC,mB,GA9ENO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFxD,SAASyD,eAAe,SAM1BV,M","file":"static/js/main.897caefe.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      regs: []\n    };\n    this.roleOptions = [\n      {value: \"Chadmin\", label: \"Chadmin\"},\n      {value: \"Janny\", label: \"Janny\"},\n      {value: \"Verified\", label: \"Verified\"},\n      {value: \"Banned\", label: \"Banned\"}\n    ];\n  }\n\n  componentDidMount(){\n    const html = document.querySelector('html');\n    html.addEventListener('click', () => {\n        let inputCheck = document.querySelectorAll('input');\n        if (inputCheck.length){\n            for (let i = 2; i < inputCheck.length + 3; i++){\n                let input = document.querySelector(`#react-select-${i}-input`);\n                if (input !== null){\n                    input.readOnly = true;\n                }\n            }\n        }\n    })\n    axios.get('https://nanaimg.net/registry/unapproved')\n      .then(res => {\n        this.setState({\n          ...this.state,\n          regs: [...res.data.response]\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  approve = (e) => {\n    let id = e.target.id.split('-')[1];\n    let role = document.querySelector(`#role${id} div div div`).textContent;\n    let fd = new FormData();\n    fd.append('role', role);\n    axios.post(`https://nanaimg.net/register/approve/${id}`, fd)\n      .then(res => {\n        window.location.href = 'https://nanaimg.net/applicants';\n      })\n      .catch(err => {\n        console.log(\"An error occurred\")\n      })\n  }\n\n  deny = (e) => {\n    let id = e.target.id.split('-')[1];\n\n    axios.post(`https://nanaimg.net/register/deny/${id}`)\n      .then(res => {\n        window.location.href = 'https://nanaimg.net/applicants';\n      })\n      .catch(err => {\n        console.log(\"An error occurred\")\n      })\n  }\n\n  render(){\n    return (\n      <>\n      <h1 id=\"h1-registrants\">Applicants</h1>\n      <div id=\"registrants-queue-heading\">\n          <h2 className=\"registrants-queue-types regi-user\">Username</h2>\n          <h2 className=\"registrants-queue-types regi-email\">Email</h2>\n          <h2 className=\"registrants-queue-types regi-date\">Application Date</h2>\n          <h2 className=\"registrants-queue-types regi-role\">Position</h2>\n          <h2 className=\"registrants-queue-types regi-act\">Actions</h2>\n        </div>\n      {this.state.regs.map((reg) => {\n        return (\n          <div key={reg.user_id} className=\"registrants-cards\" id={`reg${reg.user_id}`}>\n              <h2 id={`regname-${reg.user_id}`} className=\"registrants-data regi-user\">{reg.username}</h2>\n              <h2 className=\"registrants-data regi-email\">{reg.email}</h2>\n              <h2 className=\"registrants-data regi-date\">{reg.status_action_date}</h2>\n              <Select id={`role${reg.user_id}`} className=\"registrants-data regi-role\" options={this.roleOptions} defaultValue={{ label: 'Verified', value: 'Verified' }}/>\n              <div className=\"regi-act\">\n                <button id={`approve-${reg.user_id}`} className=\"button-registrants\" onClick={this.approve}>Approve</button>\n                <button id={`deny-${reg.user_id}`} className=\"button-registrants\" onClick={this.deny}>Deny</button>\n              </div>\n            </div>\n        )\n      })}\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}