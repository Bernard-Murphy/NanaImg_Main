{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","textHandler","e","setState","state","target","name","value","formSubmit","fd","FormData","append","password","message","errorMessage","axios","post","then","res","data","success","window","location","href","catch","err","fail","forgotPassword","document","querySelector","addEventListener","key","id","className","onChange","this","type","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAoGeA,E,kDA/Fb,aAAc,IAAD,8BACX,gBASFC,YAAc,SAAAC,GACZ,EAAKC,SAAL,2BACK,EAAKC,OADV,kBAEGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAbjB,EA8BbC,WAAa,WACX,IAAMC,EAAK,IAAIC,SACfD,EAAGE,OAAO,OAAQ,EAAKP,MAAME,MAC7BG,EAAGE,OAAO,WAAY,EAAKP,MAAMQ,UACjC,EAAKT,SAAL,2BACK,EAAKC,OADV,IAEES,QAAS,gBACTC,aAAc,MAEhBC,IAAMC,KAAK,4BAA6BP,GACrCQ,MAAK,SAAAC,GACAA,EAAIC,KAAKC,QACXL,IAAMC,KAAK,gCAAiCP,GAC3CQ,MAAK,SAAAC,GACJ,EAAKf,SAAL,2BACK,EAAKC,OADV,IAEES,QAAS,6BAEXQ,OAAOC,SAASC,KAAO,mCAExBC,OAAM,SAAAC,GACL,EAAKtB,SAAL,2BACK,EAAKC,OADV,IAEES,QAAS,GACTC,aAAc,6CAGTI,EAAIC,KAAKO,MAClB,EAAKvB,SAAL,2BACK,EAAKC,OADV,IAEES,QAAS,GACTC,aAAcI,EAAIC,KAAKO,WAI5BF,OAAM,SAAAC,GACL,EAAKtB,SAAL,2BACK,EAAKC,OADV,IAEEU,aAAc,uCACdD,QAAS,UArEJ,EA0Ebc,eAAiB,WACfN,OAAOC,SAASC,KAAO,sCAzEvB,EAAKnB,MAAQ,CACXE,KAAM,GACNM,SAAU,GACVC,QAAS,GACTC,aAAc,IANL,E,gEAiBO,IAAD,OACjBc,SAASC,cAAc,qBAAqBC,iBAAiB,WAAW,SAAC5B,GACzD,UAAVA,EAAE6B,KACJ,EAAKvB,gBAGToB,SAASC,cAAc,qBAAqBC,iBAAiB,WAAW,SAAC5B,GACzD,UAAVA,EAAE6B,KACJ,EAAKvB,kB,+BAsDT,OACE,sBAAKwB,GAAG,aAAR,UACE,oBAAIA,GAAG,gBAAP,oBACA,sBAAKC,UAAU,cAAf,UAA6B,uBAAOA,UAAU,oBAAjB,wBAA7B,IAAqF,uBAAOC,SAAUC,KAAKlC,YAAaK,KAAK,OAAO8B,KAAK,OAAOJ,GAAG,mBAAmBC,UAAU,wBAA0B,uBAC1M,sBAAKA,UAAU,cAAf,UAA6B,uBAAOA,UAAU,oBAAjB,wBAA7B,IAAqF,uBAAOC,SAAUC,KAAKlC,YAAaK,KAAK,WAAW8B,KAAK,WAAWH,UAAU,mBAAmBD,GAAG,wBACxL,sBAAKA,GAAG,yBAAR,UACE,wBAAQK,QAASF,KAAK3B,WAAYwB,GAAG,eAArC,oBACA,wBAAQK,QAASF,KAAKR,eAAgBK,GAAG,gBAAzC,gCAE2B,KAA5BG,KAAK/B,MAAMU,aAAsB,sBAAU,mBAAGkB,GAAG,wBAAN,SAA+BG,KAAK/B,MAAMU,eAC9D,KAAvBqB,KAAK/B,MAAMS,QAAiB,sBAAU,mBAAGmB,GAAG,yBAAN,SAAgCG,KAAK/B,MAAMS,iB,GA1FxEyB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BX,M","file":"static/js/main.4ddd8a27.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      name: \"\",\n      password: \"\",\n      message: \"\",\n      errorMessage: \"\"\n    }\n  }\n\n  textHandler = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  componentDidMount(){\n    document.querySelector('#login-input-name').addEventListener('keydown', (e) => {\n      if (e.key === \"Enter\"){\n        this.formSubmit();\n      }\n    })\n    document.querySelector('#login-input-pass').addEventListener('keydown', (e) => {\n      if (e.key === \"Enter\"){\n        this.formSubmit();\n      }\n    })\n  }\n\n  formSubmit = () => {\n    const fd = new FormData();\n    fd.append(\"name\", this.state.name);\n    fd.append(\"password\", this.state.password);\n    this.setState({\n      ...this.state,\n      message: \"logging in...\",\n      errorMessage: \"\"\n    });\n    axios.post('https://nanaimg.net/login', fd)\n      .then(res => {\n        if (res.data.success){\n          axios.post('https://img.nanaimg.net/login', fd)\n          .then(res => {\n            this.setState({\n              ...this.state,\n              message: \"Success! Redirecting...\"\n            })\n            window.location.href = 'https://nanaimg.net/dashboard';\n          })\n          .catch(err => {\n            this.setState({\n              ...this.state,\n              message: \"\",\n              errorMessage: \"An error occurred. Please try again.\"\n            })\n          })\n        } else if (res.data.fail){\n          this.setState({\n            ...this.state,\n            message: \"\",\n            errorMessage: res.data.fail\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          ...this.state,\n          errorMessage: \"An error occurred. Please try again.\",\n          message: \"\"\n        })\n      })\n  }\n\n  forgotPassword = () => {\n    window.location.href = \"https://nanaimg.net/forgotPassword\";\n  }\n\n  render(){\n    return (\n      <div id=\"login-form\">\n        <h1 id=\"h1-must-login\">Log In</h1>\n        <div className=\"login-field\"><label className=\"labels-login-form\">Username: </label> <input onChange={this.textHandler} name=\"name\" type=\"text\" id=\"login-input-name\" className=\"input-login-form\"/></div><br/>\n        <div className=\"login-field\"><label className=\"labels-login-form\">Password: </label> <input onChange={this.textHandler} name=\"password\" type=\"password\" className=\"input-login-form\" id=\"login-input-pass\"/></div>\n        <div id=\"button-container-login\">\n          <button onClick={this.formSubmit} id=\"button-login\">Log in</button> \n          <button onClick={this.forgotPassword} id=\"button-forgot\">Forgot Password</button>\n        </div>\n        {this.state.errorMessage === \"\" ? <p></p> : <p id=\"comment-error-message\">{this.state.errorMessage}</p>}\n        {this.state.message === \"\" ? <p></p> : <p id=\"comment-upload-message\">{this.state.message}</p>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}