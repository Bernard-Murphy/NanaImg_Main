{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","toggleSort","state","initialized","offSet","Number","document","querySelector","textContent","sortBy","units","unitLabel","setState","offset","sortExp","sortHandler","e","value","subOff","addOff","unitHandler","label","submit","window","location","href","unitExp","sortOptions","unitOptions","id","onClick","this","defaultValue","options","onChange","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c9da0242.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      initialized: false,\n      offset: 1,\n      sortBy: \"Recent\",\n      units: \"All Time\",\n      unitLabel: \"All Time\",\n      sortExp: false,\n      unitExp: false,\n    }\n\n    this.sortOptions = [\n      {value: \"Latest Posts\", label: \"Latest Posts\"},\n      {value: \"Popular\", label: \"Popular\"},\n      {value: \"Latest Comments\", label: \"Latest Comments\"}\n    ]\n\n    this.unitOptions = [\n      {value: \"All Time\", label: \"All Time\"},\n      {value: \"year\", label: \"Year(s)\"},\n      {value: \"month\", label: \"Month(s)\"},\n      {value: \"week\", label: \"Week(s)\"},\n      {value: \"day\", label: \"Day(s)\"}\n    ]\n  }\n\n  toggleSort = () => {\n    if (this.state.initialized === false){\n      const offSet = Number(document.querySelector('#offSet').textContent);\n      const sortBy = document.querySelector('#sortedBy').textContent;\n      const units = document.querySelector('#units').textContent;\n      let unitLabel = \"All Time\"\n      if (units === \"day\"){\n        unitLabel = \"Day(s)\";\n      } else if (units === \"month\"){\n        unitLabel = \"Month(s)\";\n      } else if (units === \"year\"){\n        unitLabel = \"Year(s)\";\n      } else if (units === \"week\"){\n        unitLabel = \"Week(s)\"\n      }\n      this.setState({\n        ...this.state,\n        offset: offSet,\n        sortBy: sortBy,\n        units: units,\n        unitLabel: unitLabel,\n        initialized: true,\n        sortExp: !this.state.sortExp\n      })\n    } else {\n      this.setState({\n        ...this.state,\n        sortExp: !this.state.sortExp\n      })\n    }\n  }\n\n  sortHandler = (e) => {\n    this.setState({\n      ...this.state,\n      sortBy: e.value\n    })\n  }\n\n  subOff = () => {\n    if (this.state.offset !== 1){\n      this.setState({\n        ...this.state,\n        offset: this.state.offset - 1\n      })\n    }\n  }\n\n  addOff = () => {\n    this.setState({\n      ...this.state,\n      offset: this.state.offset + 1\n    })\n  }\n\n  unitHandler = (e) => {\n    this.setState({\n      ...this.state,\n      units: e.value,\n      unitLabel: e.label\n    })\n  }\n\n  submit = () => {\n    if (this.state.sortBy === \"Latest Posts\"){\n      window.location.href = \"https://nanaimg.net/browse/recent\";\n    } else if (this.state.sortBy === \"Latest Comments\"){\n      window.location.href = \"https://nanaimg.net/browse/recent-comments\";\n    } else {\n      if (this.state.units === \"All Time\"){\n        window.location.href = \"https://nanaimg.net/browse/popular\";\n      } else {\n        window.location.href = `https://nanaimg.net/browse/popular/${this.state.units}/${this.state.offset}/1`;\n      }\n    }\n  }\n\n  // componentDidUpdate(){\n  //   console.log(this.state);\n  // }\n\n  render(){\n    return(\n      <div id=\"browse-sort-div\">\n      <button id=\"browse-sort-button\" onClick={this.toggleSort}>Sort By...</button>\n      {(this.state.sortExp) ? <div>\n        <Select id=\"sort-select\" defaultValue={{ label: `${this.state.sortBy}`, value: `${this.state.sortBy}` }} options={this.sortOptions} onChange={this.sortHandler} />\n        {this.state.sortBy === \"Popular\" ? \n        <>\n        <h2 className=\"browse-from-ago\">From</h2>\n        {(this.state.units === \"All Time\") ? <></> : <div id=\"browse-div-nav\">\n          <h3 className=\"browse-arrows\" onClick={this.subOff}>&lt;&lt;</h3><p id=\"browse-offset-number\">{this.state.offset}</p><h3 className=\"browse-arrows\" onClick={this.addOff}>&gt;&gt;</h3>\n        </div> }\n        <Select id=\"browse-unit-select\" options={this.unitOptions} onChange={this.unitHandler} defaultValue={{ label: `${this.state.unitLabel}`, value: `${this.state.units}` }}/>\n        {(this.state.units === \"All Time\")? <></> : <h3 className=\"browse-from-ago\">Ago</h3>}\n        </>\n        : <></>}\n        <button onClick={this.submit} id=\"browse-submit-button\">Go</button>\n      </div> : <></>}\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}